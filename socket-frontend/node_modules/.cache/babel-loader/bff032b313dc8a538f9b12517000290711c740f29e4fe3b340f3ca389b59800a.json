{"ast":null,"code":"var _jsxFileName = \"/Users/zaydanmubaraq/Documents/Project/omchannel/socketapp/socket-frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport ChatInput from '../components/ChatInput';\nimport MessageList from '../components/MessageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Connect ke socket server\n    const socket = io('http://localhost:3000', {\n      auth: {\n        token: localStorage.getItem('token')\n      }\n    });\n    socket.on('connect', () => {\n      console.log('Connected to socket server');\n    });\n    socket.on('receive_message', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    setSocket(socket);\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const sendMessage = () => {\n    if (message.trim()) {\n      socket.emit('send_message', {\n        message,\n        sender: 'User'\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        message,\n        sender: 'You'\n      }]);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      message: message,\n      setMessage: setMessage,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"cstmvBXn/GmgKVwT4kP1aTR/RbU=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","io","ChatInput","MessageList","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","message","setMessage","socket","setSocket","auth","token","localStorage","getItem","on","console","log","newMessage","prevMessages","disconnect","sendMessage","trim","emit","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zaydanmubaraq/Documents/Project/omchannel/socketapp/socket-frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport ChatInput from '../components/ChatInput';\nimport MessageList from '../components/MessageList';\n\nfunction ChatPage() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  \n  useEffect(() => {\n    // Connect ke socket server\n    const socket = io('http://localhost:3000', {\n      auth: { token: localStorage.getItem('token') },\n    });\n\n    socket.on('connect', () => {\n      console.log('Connected to socket server');\n    });\n\n    socket.on('receive_message', (newMessage) => {\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n    });\n\n    setSocket(socket);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (message.trim()) {\n      socket.emit('send_message', { message, sender: 'User' });\n      setMessages((prevMessages) => [...prevMessages, { message, sender: 'You' }]);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-page\">\n      <MessageList messages={messages} />\n      <ChatInput message={message} setMessage={setMessage} sendMessage={sendMessage} />\n    </div>\n  );\n}\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,MAAM,GAAGX,EAAE,CAAC,uBAAuB,EAAE;MACzCa,IAAI,EAAE;QAAEC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE;IAC/C,CAAC,CAAC;IAEFL,MAAM,CAACM,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC;IAEFR,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAGG,UAAU,IAAK;MAC3CZ,WAAW,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEFR,SAAS,CAACD,MAAM,CAAC;IAEjB,OAAO,MAAM;MACXA,MAAM,CAACW,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAId,OAAO,CAACe,IAAI,CAAC,CAAC,EAAE;MAClBb,MAAM,CAACc,IAAI,CAAC,cAAc,EAAE;QAAEhB,OAAO;QAAEiB,MAAM,EAAE;MAAO,CAAC,CAAC;MACxDlB,WAAW,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEZ,OAAO;QAAEiB,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;MAC5EhB,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA,CAACF,WAAW;MAACK,QAAQ,EAAEA;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnC5B,OAAA,CAACH,SAAS;MAACQ,OAAO,EAAEA,OAAQ;MAACC,UAAU,EAAEA,UAAW;MAACa,WAAW,EAAEA;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEV;AAAC1B,EAAA,CAxCQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}