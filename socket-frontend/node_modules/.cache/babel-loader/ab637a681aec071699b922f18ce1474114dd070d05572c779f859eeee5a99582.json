{"ast":null,"code":"var _jsxFileName = \"/Users/zaydanmubaraq/Documents/Project/omchannel/socketapp/socket-frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register({\n  onRegister\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (!username || !password) {\n      return alert('Username dan password diperlukan');\n    }\n    try {\n      const res = await fetch('http://localhost:3000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }) // Mengirimkan username dan password\n      });\n      const data = await res.json();\n      if (data.token) {\n        localStorage.setItem('token', data.token); // Menyimpan token di localStorage\n        onRegister(data.token); // Callback untuk mengupdate state register di parent\n      } else {\n        setErrorMessage(data.error || 'Registrasi gagal');\n      }\n    } catch (err) {\n      console.error('Register error:', err);\n      setErrorMessage('Terjadi kesalahan, coba lagi nanti.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","onRegister","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleRegister","e","preventDefault","alert","res","fetch","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","error","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","style","color","_c","$RefreshReg$"],"sources":["/Users/zaydanmubaraq/Documents/Project/omchannel/socketapp/socket-frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Register({ onRegister }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    if (!username || !password) {\n      return alert('Username dan password diperlukan');\n    }\n\n    try {\n      const res = await fetch('http://localhost:3000/api/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }), // Mengirimkan username dan password\n      });\n\n      const data = await res.json();\n\n      if (data.token) {\n        localStorage.setItem('token', data.token); // Menyimpan token di localStorage\n        onRegister(data.token); // Callback untuk mengupdate state register di parent\n      } else {\n        setErrorMessage(data.error || 'Registrasi gagal');\n      }\n    } catch (err) {\n      console.error('Register error:', err);\n      setErrorMessage('Terjadi kesalahan, coba lagi nanti.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <form onSubmit={handleRegister}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}